[runtime]
sampler = polychord
root = ${PWD}
verbosity = standard

[test]
save_dir=output/planck
fatal_errors=T


[pipeline]
; these names refer to sections later in the file:
modules = consistency class planck
values = examples/planck_lite_values.ini
debug=F
timing=T


[planck]
file = likelihood/planck_py/planck_py_interface.py
use_low_ell_bins = T
spectra = TT
year = 2018


; The consistency module translates between our chosen parameterization
; and any other that modules in the pipeline may want (e.g. camb)
[consistency]
file = ./utility/consistency/consistency_interface.py


[class]
file = boltzmann/class/class_interface.py
version = 3.2.0
lmax = 2850
debug = T
zmax = 4.0
cmb = T
mpk = F
lensing = T

[polychord]
; file=cosmosis/cosmosis/samplers/polychord/polychord_sampler.py
base_dir = chain_checkpoints
polychord_outfile_root=output
resume=T
feedback = 3
fast_fraction = 0.1
compression_factor = 0.00001
;Minimum settings for a "good enough" quick test
;live_points = 250
;num_repeats = 30
;tolerance = 0.1
;Settings for high quality paper runs
live_points = 500
num_repeats=60
tolerance=0.01
boost_posteriors=10.0

[output]
filename= chain_output.txt
format=text
lock=F
privacy=F

[camb]
file = boltzmann/camb/camb_interface.py
mode = cmb
lmax = 2800          ;max ell to use for cmb calculation
feedback=2         ;amount of output to print
AccuracyBoost=1.1 ;CAMB accuracy boost parameter
do_tensors = True   ;include tensor modes
do_lensing = True    ;lensing is required w/ Planck data
NonLinear = lens
accurate_massive_neutrino_transfers = F
halofit_version = takahashi